apiVersion: apps/v1
kind: Deployment
metadata:
    name: service-ui
spec:
    selector:
        matchLabels:
            app: service-ui
    replicas: 1
    template:
        metadata:
            labels:
                app: service-ui
        spec:
            containers:
            - name: service-ui
              image: node:8.12
              command: ["/bin/bash"]
              tty: true
              workingDir: /cognigy/services/service-ui
              env:
              - name: NODE_ENV
                value: dev
              envFrom:
              - configMapRef:
                    name: cognigy-env
              volumeMounts:
              - name: cognigy-repo
                mountPath: "/cognigy"
            volumes:
            - name: cognigy-repo
              persistentVolumeClaim:
                claimName: cognigy-repo
            imagePullSecrets:
            - name: cognigy-registry-token
---
apiVersion: apps/v1
kind: Deployment
metadata:
    name: service-api
spec:
    selector:
        matchLabels:
            app: service-api
    replicas: 1
    template:
        metadata:
            labels:
                app: service-api
        spec:
            containers:
            - name: service-api
              image: node:8.12
              command: ["/bin/bash"]
              tty: true
              workingDir: /cognigy/services/service-api
              env:
              - name: NODE_ENV
                value: dev
              - name: AUTHENTICATION_DB_PASSWORD
                valueFrom:
                    secretKeyRef:
                        name: cognigy-service-api
                        key: db-password
              - name: JWT_SECRET
                valueFrom:
                    secretKeyRef:
                        name: cognigy-jwt
                        key: secret
              - name: RABBITMQ_PASSWORD
                valueFrom:
                    secretKeyRef:
                        name: cognigy-rabbitmq
                        key: rabbitmq-password
              envFrom:
              - configMapRef:
                    name: cognigy-env
              volumeMounts:
              - name: cognigy-repo
                mountPath: "/cognigy"
            volumes:
            - name: cognigy-repo
              persistentVolumeClaim:
                claimName: cognigy-repo
            imagePullSecrets:
            - name: cognigy-registry-token
---
apiVersion: apps/v1
kind: Deployment
metadata:
    name: service-export-import
spec:
    selector:
        matchLabels:
            app: service-export-import
    replicas: 1
    template:
        metadata:
            labels:
                app: service-export-import
        spec:
            containers:
            - name: service-export-import
              image: node:8.12
              command: ["/bin/bash"]
              tty: true
              workingDir: /cognigy/services/service-export-import
              env:
              - name: NODE_ENV
                value: dev
              - name: RABBITMQ_PASSWORD
                valueFrom:
                    secretKeyRef:
                        name: cognigy-rabbitmq
                        key: rabbitmq-password
              envFrom:
              - configMapRef:
                    name: cognigy-env
              volumeMounts:
              - name: cognigy-repo
                mountPath: "/cognigy"
            volumes:
            - name: cognigy-repo
              persistentVolumeClaim:
                claimName: cognigy-repo
            imagePullSecrets:
            - name: cognigy-registry-token

---
apiVersion: apps/v1
kind: Deployment
metadata:
    name: service-ai
spec:
    selector:
        matchLabels:
            app: service-ai
    replicas: 1
    template:
        metadata:
            labels:
                app: service-ai
        spec:
            containers:
            - name: service-ai
              image: node:8.11
              command: ["/bin/bash"]
              tty: true
              workingDir: /cognigy/services/service-ai
              env:
              - name: NODE_ENV
                value: dev
              - name: AI_DB_PASSWORD
                valueFrom:
                    secretKeyRef:
                        name: cognigy-service-ai
                        key: db-password
              - name: RABBITMQ_PASSWORD
                valueFrom:
                    secretKeyRef:
                        name: cognigy-rabbitmq
                        key: rabbitmq-password
              envFrom:
              - configMapRef:
                    name: cognigy-env
              volumeMounts:
              - name: cognigy-repo
                mountPath: "/cognigy"
            volumes:
            - name: cognigy-repo
              persistentVolumeClaim:
                claimName: cognigy-repo
            imagePullSecrets:
            - name: cognigy-registry-token
---
apiVersion: apps/v1
kind: Deployment
metadata:
    name: service-endpoint
spec:
    selector:
        matchLabels:
            app: service-endpoint
    replicas: 1
    template:
        metadata:
            labels:
                app: service-endpoint
        spec:
            containers:
            - name: service-endpoint
              image: node:8.12
              command: ["/bin/bash"]
              tty: true
              workingDir: /cognigy/services/service-endpoint
              envFrom:
              - configMapRef:
                    name: cognigy-env
              env:
              - name: NODE_ENV
                value: dev
              - name: FB_VERIFY_TOKEN
                valueFrom:
                    secretKeyRef:
                        name: cognigy-facebook
                        key: fb-verify-token
              - name: JWT_SECRET
                valueFrom:
                    secretKeyRef:
                        name: cognigy-jwt
                        key: secret
              - name: RABBITMQ_PASSWORD
                valueFrom:
                    secretKeyRef:
                        name: cognigy-rabbitmq
                        key: rabbitmq-password
              volumeMounts:
              - name: cognigy-repo
                mountPath: "/cognigy"
              - name: redis-password

                # In alpine:3.7, they created a symlink between /var/run and /run.
                # Writing to /run directly results in a 'read-only' error, so we therefore
                # circumvent this by writing in to /var/run
                mountPath: "/var/run/secrets"

            volumes:
            - name: cognigy-repo
              persistentVolumeClaim:
                claimName: cognigy-repo
            - name: redis-password
              secret:
                  secretName: redis-persistent.conf

            imagePullSecrets:
            - name: cognigy-registry-token
---
apiVersion: apps/v1
kind: Deployment
metadata:
    name: service-endpoints
spec:
    selector:
        matchLabels:
            app: service-endpoints
    replicas: 1
    template:
        metadata:
            labels:
                app: service-endpoints
        spec:
            containers:
            - name: service-endpoints
              image: node:8.12
              command: ["/bin/bash"]
              tty: true
              workingDir: /cognigy/services/service-endpoints
              env:
              - name: NODE_ENV
                value: dev
              - name: ENDPOINTS_DB_PASSWORD
                valueFrom:
                    secretKeyRef:
                        name: cognigy-service-endpoints
                        key: db-password
              - name: RABBITMQ_PASSWORD
                valueFrom:
                    secretKeyRef:
                        name: cognigy-rabbitmq
                        key: rabbitmq-password
              envFrom:
              - configMapRef:
                    name: cognigy-env
              volumeMounts:
              - name: cognigy-repo
                mountPath: "/cognigy"

            volumes:
            - name: cognigy-repo
              persistentVolumeClaim:
                claimName: cognigy-repo

            imagePullSecrets:
            - name: cognigy-registry-token
---
apiVersion: apps/v1
kind: Deployment
metadata:
    name: service-profiles
spec:
    selector:
        matchLabels:
            app: service-profiles
    replicas: 1
    template:
        metadata:
            labels:
                app: service-profiles
        spec:
            containers:
            - name: service-profiles
              image: node:8.12
              command: ["/bin/bash"]
              tty: true
              workingDir: /cognigy/services/service-profiles
              env:
              - name: NODE_ENV
                value: dev
              - name: PROFILES_DB_PASSWORD
                valueFrom:
                    secretKeyRef:
                        name: cognigy-service-profiles
                        key: db-password
              - name: RABBITMQ_PASSWORD
                valueFrom:
                    secretKeyRef:
                        name: cognigy-rabbitmq
                        key: rabbitmq-password
              envFrom:
              - configMapRef:
                    name: cognigy-env
              volumeMounts:
              - name: cognigy-repo
                mountPath: "/cognigy"

            volumes:
            - name: cognigy-repo
              persistentVolumeClaim:
                claimName: cognigy-repo

            imagePullSecrets:
            - name: cognigy-registry-token

---
apiVersion: apps/v1
kind: Deployment
metadata:
    name: service-flows
spec:
    selector:
        matchLabels:
            app: service-flows
    replicas: 1
    template:
        metadata:
            labels:
                app: service-flows
        spec:
            containers:
            - name: service-flows
              image: node:8.12
              command: ["/bin/bash"]
              tty: true
              workingDir: /cognigy/services/service-flows
              env:
              - name: NODE_ENV
                value: dev
              - name: FLOWS_DB_PASSWORD
                valueFrom:
                    secretKeyRef:
                        name: cognigy-service-flows
                        key: db-password
              - name: RABBITMQ_PASSWORD
                valueFrom:
                    secretKeyRef:
                        name: cognigy-rabbitmq
                        key: rabbitmq-password
              envFrom:
              - configMapRef:
                    name: cognigy-env
              volumeMounts:
              - name: cognigy-repo
                mountPath: "/cognigy"
              - name: flow-modules-nfs
                mountPath: "/app/flowModules"

            volumes:
            - name: cognigy-repo
              persistentVolumeClaim:
                claimName: cognigy-repo
            - name: flow-modules-nfs
              persistentVolumeClaim:
                claimName: flow-modules-nfs

            imagePullSecrets:
            - name: cognigy-registry-token
---
apiVersion: apps/v1
kind: Deployment
metadata:
    name: service-nlp-en
spec:
    selector:
        matchLabels:
            app: service-nlp-en
    replicas: 1
    template:
        metadata:
            labels:
                app: service-nlp-en
        spec:
            containers:
            - name: service-nlp-en
              image: dev-docker.cognigy.com:5000/cnlplocal:1
              command: ["/bin/bash"]
              tty: true
              workingDir: /cognigy/services/service-nlp
              volumeMounts:
              - name: nlp-models-nfs
                mountPath: "/data/models"
              - name: nlp-config-nfs
                mountPath: "/data/config"
              - name: cognigy-repo
                mountPath: "/cognigy"
              envFrom:
                - configMapRef:
                    name: cognigy-env
              env:
              - name: LANGUAGES_TO_RUN
                value: en-US
              - name: NLP_DB_PASSWORD
                valueFrom:
                    secretKeyRef:
                        name: cognigy-service-nlp
                        key: db-password
              - name: RABBITMQ_PASSWORD
                valueFrom:
                    secretKeyRef:
                        name: cognigy-rabbitmq
                        key: rabbitmq-password
            volumes:
            - name: nlp-models-nfs
              persistentVolumeClaim:
                claimName: nlp-models-nfs
            - name: nlp-config-nfs
              persistentVolumeClaim:
                claimName: nlp-config-nfs
            - name: cognigy-repo
              persistentVolumeClaim:
                claimName: cognigy-repo
            imagePullSecrets:
            - name: cognigy-registry-token

---
apiVersion: apps/v1
kind: Deployment
metadata:
    name: service-nlp-de
spec:
    selector:
        matchLabels:
            app: service-nlp-de
    replicas: 0
    template:
        metadata:
            labels:
                app: service-nlp-de
        spec:
            containers:
            - name: service-nlp-de
              image: busybox
              command: ["/bin/bash"]
              tty: true
              workingDir: /cognigy/services/service-nlp-de
              envFrom:
              - configMapRef:
                    name: cognigy-env
              volumeMounts:
              - name: cognigy-repo
                mountPath: "/cognigy"
            volumes:
            - name: cognigy-repo
              persistentVolumeClaim:
                claimName: cognigy-repo
            imagePullSecrets:
            - name: cognigy-registry-token

---
apiVersion: apps/v1
kind: Deployment
metadata:
    name: service-nlp-ge
spec:
    selector:
        matchLabels:
            app: service-nlp-ge
    replicas: 0
    template:
        metadata:
            labels:
                app: service-nlp-ge
        spec:
            containers:
            - name: service-nlp-ge
              image: busybox
              command: ["/bin/bash"]
              tty: true
              workingDir: /cognigy/services/service-nlp-ge
              envFrom:
              - configMapRef:
                    name: cognigy-env
              volumeMounts:
              - name: cognigy-repo
                mountPath: "/cognigy"
            volumes:
            - name: cognigy-repo
              persistentVolumeClaim:
                claimName: cognigy-repo
            imagePullSecrets:
            - name: cognigy-registry-token