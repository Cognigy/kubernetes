apiVersion: apps/v1
kind: Deployment
metadata:
  name: efs-provisioner-functions
spec:
  selector:
    matchLabels:
      app: efs-provisioner-functions
  replicas: 1
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        app: efs-provisioner-functions
    spec:
      containers:
      - name: efs-provisioner-functions
        image: quay.io/external_storage/efs-provisioner:latest
        resources:
          limits:
            memory: "200Mi"
            cpu: "100m"
        env:
          - name: FILE_SYSTEM_ID
            value: "functions-file-system"
          - name: AWS_REGION
            value: "region"
          - name: PROVISIONER_NAME
            value: "efs-provisioner-functions"
        volumeMounts:
          - name: pv-volume
            mountPath: /persistentvolumes
      volumes:
        - name: pv-volume
          nfs:
            server: functions-file-system.efs.region.amazonaws.com
            path: /
---
kind: PersistentVolumeClaim
apiVersion: v1
metadata:
  name: functions
  annotations:
    volume.beta.kubernetes.io/storage-class: "aws-efs-functions"
spec:
  storageClassName: aws-efs-functions
  accessModes:
    - ReadWriteMany
  resources:
    requests:
      # The storage request has no effect for NFS
      storage: 1Mi
---
kind: StorageClass
apiVersion: storage.k8s.io/v1
metadata:
  name: aws-efs-functions
provisioner: efs-provisioner-functions
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: efs-provisioner-functions
subjects:
  - kind: ServiceAccount
    # Reference to upper's `metadata.name`
    name: default
    # Reference to upper's `metadata.namespace`
    namespace: default
roleRef:
  kind: ClusterRole
  name: cluster-admin
  apiGroup: rbac.authorization.k8s.io