apiVersion: apps/v1
kind: Deployment
metadata:
  name: service-nlp-tokens-en
spec:
  selector:
    matchLabels:
      app: service-nlp-tokens-en
  replicas: 1
  template:
    metadata:
      labels:
        app: service-nlp-tokens-en
    spec:
      containers:
        - name: service-nlp-tokens-en
          image: 'docker.cognigy.com:5000/service-nlp-tokens:bd930ff1a7665bfbcaefe60e86c5d2cdf3e0cdbf'
          resources:
            requests:
              cpu: '0.350'
              memory: 1600M
            limits:
              cpu: '0.5'
              memory: 2000M
          volumeMounts:
            - name: nlp-models-nfs
              mountPath: /data/models
            - name: languages-config
              mountPath: /languages
            - name: rabbitmq-connection-string
              mountPath: /var/run/secrets
          livenessProbe:
            exec:
              command:
                - python
                - '-u'
                - cnlp/health_check.py
            failureThreshold: 1
            initialDelaySeconds: 900
            periodSeconds: 60
            timeoutSeconds: 15
          envFrom:
            - configMapRef:
                name: cognigy-env
          env:
            - name: LANGUAGES_TO_RUN
              value: en-US
            - name: LANGUAGE_CONFIG_PATH
              value: /languages/languages.json
            - name: NLP_REDIS_LOCK
              value: 'false'
      volumes:
        - name: nlp-models-nfs
          persistentVolumeClaim:
            claimName: nlp-models-nfs
        - name: languages-config
          configMap:
            name: languages-config
        - name: rabbitmq-connection-string
          secret:
            secretName: cognigy-rabbitmq
            items:
              - key: connection-string
                path: rabbitmqConnectionString
      imagePullSecrets:
        - name: cognigy-registry-token
